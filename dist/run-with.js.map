{"version":3,"sources":["src/run-with.js"],"names":[],"mappings":"AAAA;AAAA,WAAW,CAAC;AAEZ,AAAI,EAAA,CAAA,aAAY,EAAI,CAAA,OAAM,AAAC,CAAC,eAAc,CAAC,CAAC;AAC5C,AAAI,EAAA,CAAA,GAAE,EAAI,CAAA,OAAM,AAAC,CAAC,KAAI,CAAC,CAAC;AACxB,AAAI,EAAA,CAAA,EAAC,EAAI,CAAA,OAAM,AAAC,CAAC,IAAG,CAAC,CAAC;AAEtB,KAAK,QAAQ,EAAI,SAAS,QAAM,CAAE,SAAQ,CAAG,CAAA,MAAK,CAAG,CAAA,EAAC,CAAG;AACrD,KAAI,CAAC,EAAC;AACF,KAAC,EAAI,UAAS,AAAD,CAAG,GAAC,CAAC;AAAA,AACtB,IAAE,KAAK,AAAC,CAAC,CACD,IAAG,CAAG,KAAG,CACb,CACA,SAAS,iBAAe,CAAE,GAAE,CAAG,CAAA,IAAG,CAAG,CAAA,EAAC,CAAG;AACrC,MAAI;AACA,AAAI,QAAA,CAAA,eAAc,EAAI,UAAS,AAAD,CAAG;AAC7B,UAAI;AACA,WAAC,UAAU,AAAC,CAAC,EAAC,CAAC,CAAC;QACpB,CAAE,OAAO,CAAA,CAAG,GAAC;AAAA,AACb,SAAC,OAAO,AAAC,CAAC,IAAG,CAAC,CAAC;MACnB,CAAC;AACD,SAAI,GAAE;AAAG,YAAM,IAAE,CAAC;AAAA,AAClB,OAAC,MAAM,AAAC,CAAC,EAAC,CAAG,CAAA,MAAK,SAAS,AAAC,EAAC,CAAG,EAAA,CAAG,OAAK,CAAG,UAAS,GAAE,CAAG;AACrD,UAAI;AACA,aAAI,GAAE;AAAG,gBAAM,IAAE,CAAC;AAAA,AAClB,WAAC,MAAM,AAAC,CAAC,EAAC,CAAG,UAAS,GAAE,CAAG;AACvB,cAAI;AACA,iBAAI,GAAE;AAAG,oBAAM,IAAE,CAAC;AAAA,AACd,gBAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,AAAI,gBAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,AAAI,gBAAA,CAAA,KAAI,EAAI,CAAA,aAAY,MAAM,AAAC,CAAC,SAAQ,CAAG,EAAC,IAAG,CAAC,CAAG,EAC/C,KAAI,CAAG,EAAC,QAAO,CAAG,SAAO,CAAG,SAAO,CAAC,CACxC,CAAC,CAAC;AACF,kBAAI,GAAG,AAAC,CAAC,OAAM,CAAG,UAAS,GAAE,CAAG;AAC5B,kBAAI;AACA,qBAAI,GAAE;AAAG,wBAAM,IAAE,CAAC;AAAA,AAClB,qBAAI,MAAK,GAAK,CAAA,MAAK,OAAO,EAAI,EAAA;AAC1B,wBAAM,IAAI,MAAI,AAAC,CAAC,MAAK,SAAS,AAAC,CAAC,MAAK,CAAC,CAAC,CAAC;AAAA,AAC5C,gCAAc,AAAC,EAAC,CAAC;AACjB,mBAAC,AAAC,EAAC,CAAC;gBACR,CAAE,OAAO,CAAA,CAAG;AACR,gCAAc,AAAC,EAAC,CAAC;AACjB,mBAAC,AAAC,CAAC,CAAA,CAAC,CAAC;gBACT;AAAA,cACJ,CAAC,CAAC;YACN,CAAE,OAAO,CAAA,CAAG;AACR,4BAAc,AAAC,EAAC,CAAC;AACjB,eAAC,AAAC,CAAC,CAAA,CAAC,CAAC;YACT;AAAA,UACJ,CAAC,CAAC;QACN,CAAE,OAAO,CAAA,CAAG;AACR,wBAAc,AAAC,EAAC,CAAC;AACjB,WAAC,AAAC,CAAC,CAAA,CAAC,CAAC;QACT;AAAA,MACJ,CAAC,CAAC;IAKN,CAAE,OAAO,CAAA,CAAG;AACR,oBAAc,AAAC,EAAC,CAAC;AACjB,OAAC,AAAC,CAAC,CAAA,CAAC,CAAC;IACT;AAAA,EACJ,CAAC,CAAC;AACV,CAAC;AAAA","file":"dist/run-with.js","sourcesContent":["'use strict';\r\n\r\nvar child_process = require('child_process');\r\nvar tmp = require('tmp');\r\nvar fs = require('fs');\r\n\r\nmodule.exports = function runWith(praatExec, script, cb) {\r\n    if (!cb)\r\n        cb = function() {};\r\n    tmp.file({\r\n            keep: true\r\n        },\r\n        function _tempFileCreated(err, path, fd) {\r\n            try {\r\n                var cleanupCallback = function() {\r\n                    try {\r\n                        fs.closeSync(fd);\r\n                    } catch (e) {}\r\n                    fs.unlink(path);\r\n                };\r\n                if (err) throw err;\r\n                fs.write(fd, script.toString(), 0, 'utf8', function(err) {\r\n                    try {\r\n                        if (err) throw err;\r\n                        fs.close(fd, function(err) {\r\n                            try {\r\n                                if (err) throw err;\r\n                                var stdout = '';\r\n                                var stderr = '';\r\n                                var praat = child_process.spawn(praatExec, [path], {\r\n                                    stdio: ['ignore', 'ignore', 'ignore']\r\n                                });\r\n                                praat.on('close', function(err) {\r\n                                    try {\r\n                                        if (err) throw err;\r\n                                        if (stderr && stderr.length > 0)\r\n                                            throw new Error(stderr.toString('utf8'));\r\n                                        cleanupCallback();\r\n                                        cb();\r\n                                    } catch (e) {\r\n                                        cleanupCallback();\r\n                                        cb(e);\r\n                                    }\r\n                                });\r\n                            } catch (e) {\r\n                                cleanupCallback();\r\n                                cb(e);\r\n                            }\r\n                        });\r\n                    } catch (e) {\r\n                        cleanupCallback();\r\n                        cb(e);\r\n                    }\r\n                });\r\n\r\n                // If we don't need the file anymore we could manually call the cleanupCallback \r\n                // But that is not necessary if we didn't pass the keep option because the library \r\n                // will clean after itself. \r\n            } catch (e) {\r\n                cleanupCallback();\r\n                cb(e);\r\n            }\r\n        });\r\n};"]}